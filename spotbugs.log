./gradlew spotbugsMain
Configuration on demand is an incubating feature.
Path for java installation '/Library/Java/JavaVirtualMachines/azul-15.0.5/Contents/Home' (IntelliJ IDEA) does not contain a java executable

> Task :modules:junit4:spotbugsMain
M V EI2: com.codeborne.selenide.junit.SoftAsserts.apply(Statement, Description) may expose internal representation by storing an externally mutable object into SoftAsserts.currentTest  At SoftAsserts.java:[line 38]
H D ST: Write to static field com.codeborne.selenide.Configuration.reportsFolder from instance method com.codeborne.selenide.junit.ScreenShooter.to(String)  At ScreenShooter.java:[line 86]
M B PA: Primitive field com.codeborne.selenide.junit.ScreenShooter.captureSuccessfulTests is public and set from inside the class, which makes it too exposed. Consider making it private to limit external accessibility.  At ScreenShooter.java:[line 51]
SpotBugs ended with exit code 1

> Task :modules:testng:spotbugsMain
M V MS: com.codeborne.selenide.testng.SoftAsserts.fullStacktraces isn't final but should be  At SoftAsserts.java:[line 24]
M V MS: com.codeborne.selenide.testng.ScreenShooter.captureSuccessfulTests isn't final but should be  In ScreenShooter.java
M V MS: com.codeborne.selenide.testng.TextReport.onFailedTest isn't final but should be  At TextReport.java:[line 29]
M V MS: com.codeborne.selenide.testng.TextReport.onSucceededTest isn't final but should be  At TextReport.java:[line 30]
SpotBugs ended with exit code 1

> Task :statics:spotbugsMain
H D ST: Write to static field com.codeborne.selenide.Configuration.reportsFolder from instance method com.codeborne.selenide.junit5.ScreenShooterExtension.to(String)  At ScreenShooterExtension.java:[line 91]
M B Nm: The method name com.codeborne.selenide.Selenide.Wait() doesn't start with a lower case letter  At Selenide.java:[line 803]

> Task :modules:selenoid:spotbugsMain
M B CT: Exception thrown in class org.selenide.selenoid.SelenoidClient at new org.selenide.selenoid.SelenoidClient(String, String) will leave the constructor. The object under construction remains partially initialized and may be vulnerable to Finalizer attacks.  At SelenoidClient.java:[line 38]
SpotBugs ended with exit code 1

> Task :statics:spotbugsMain
H V MS: com.codeborne.selenide.Configuration.baseUrl isn't final but should be  At Configuration.java:[line 43]
M V MS: com.codeborne.selenide.Configuration.timeout isn't final but should be  At Configuration.java:[line 51]
M V MS: com.codeborne.selenide.Configuration.pollingInterval isn't final but should be  At Configuration.java:[line 59]
M V MS: com.codeborne.selenide.Configuration.holdBrowserOpen isn't final but should be  At Configuration.java:[line 67]
M V MS: com.codeborne.selenide.Configuration.reopenBrowserOnFail isn't final but should be  At Configuration.java:[line 79]
H V MS: com.codeborne.selenide.Configuration.browser isn't final but should be  At Configuration.java:[line 88]
H V MS: com.codeborne.selenide.Configuration.browserVersion isn't final but should be  At Configuration.java:[line 96]
H V MS: com.codeborne.selenide.Configuration.remote isn't final but should be  At Configuration.java:[line 105]
H V MS: com.codeborne.selenide.Configuration.browserSize isn't final but should be  At Configuration.java:[line 113]
H V MS: com.codeborne.selenide.Configuration.browserPosition isn't final but should be  At Configuration.java:[line 121]
H V MS: com.codeborne.selenide.Configuration.browserCapabilities isn't final but should be  At Configuration.java:[line 129]
H V MS: com.codeborne.selenide.Configuration.pageLoadStrategy isn't final but should be  At Configuration.java:[line 149]
M V MS: com.codeborne.selenide.Configuration.pageLoadTimeout isn't final but should be  At Configuration.java:[line 158]
M V MS: com.codeborne.selenide.Configuration.clickViaJs isn't final but should be  At Configuration.java:[line 168]
M V MS: com.codeborne.selenide.Configuration.screenshots isn't final but should be  At Configuration.java:[line 176]
M V MS: com.codeborne.selenide.Configuration.savePageSource isn't final but should be  At Configuration.java:[line 184]
M V MS: com.codeborne.selenide.Configuration.reportsFolder isn't final and cannot be protected from malicious code  At Configuration.java:[line 193]
H V MS: com.codeborne.selenide.Configuration.downloadsFolder isn't final but should be  At Configuration.java:[line 202]
H V MS: com.codeborne.selenide.Configuration.reportsUrl isn't final but should be  At Configuration.java:[line 215]
M V MS: com.codeborne.selenide.Configuration.fastSetValue isn't final but should be  At Configuration.java:[line 230]
H V MS: com.codeborne.selenide.Configuration.textCheck isn't final but should be  At Configuration.java:[line 237]
H V MS: com.codeborne.selenide.Configuration.selectorMode isn't final but should be  At Configuration.java:[line 252]
H V MS: com.codeborne.selenide.Configuration.assertionMode isn't final but should be  At Configuration.java:[line 267]
H V MS: com.codeborne.selenide.Configuration.fileDownload isn't final but should be  At Configuration.java:[line 275]
M V MS: com.codeborne.selenide.Configuration.proxyEnabled isn't final but should be  At Configuration.java:[line 287]
H V MS: com.codeborne.selenide.Configuration.proxyHost isn't final but should be  At Configuration.java:[line 298]
M V MS: com.codeborne.selenide.Configuration.proxyPort isn't final but should be  At Configuration.java:[line 307]
M V MS: com.codeborne.selenide.Configuration.webdriverLogsEnabled isn't final but should be  At Configuration.java:[line 323]
M V MS: com.codeborne.selenide.Configuration.headless isn't final but should be  At Configuration.java:[line 332]
H V MS: com.codeborne.selenide.Configuration.browserBinary isn't final but should be  At Configuration.java:[line 340]
M V MS: com.codeborne.selenide.Configuration.remoteReadTimeout isn't final but should be  At Configuration.java:[line 351]
M V MS: com.codeborne.selenide.Configuration.remoteConnectionTimeout isn't final but should be  At Configuration.java:[line 362]
H V MS: com.codeborne.selenide.WebDriverRunner.webdriverContainer isn't final but should be  At WebDriverRunner.java:[line 25]
H V MS: com.codeborne.selenide.Screenshots.screenshots isn't final but should be  At Screenshots.java:[line 20]
SpotBugs ended with exit code 1

> Task :modules:appium:spotbugsMain
H D ST: Write to static field com.codeborne.selenide.Configuration.browserSize from instance method com.codeborne.selenide.appium.AppiumNavigator.launchApp(Supplier)  At AppiumNavigator.java:[line 17]
H D ST: Write to static field com.codeborne.selenide.Configuration.pageLoadTimeout from instance method com.codeborne.selenide.appium.AppiumNavigator.launchApp(Supplier)  At AppiumNavigator.java:[line 18]
M V EI2: new com.codeborne.selenide.appium.AppiumClipboard(Driver) may expose internal representation by storing an externally mutable object into AppiumClipboard.driver  At AppiumClipboard.java:[line 24]
M V EI: com.codeborne.selenide.appium.AppiumClipboard.driver() may expose internal representation by returning AppiumClipboard.driver  At AppiumClipboard.java:[line 32]
H V MS: com.codeborne.selenide.appium.DeepLinkLauncher.SAFARI_ELEMENTS_TIMEOUT isn't final but should be  At DeepLinkLauncher.java:[line 27]
SpotBugs ended with exit code 1

> Task :modules:core:spotbugsMain
M V EI2: com.codeborne.selenide.logevents.SelenideLog.setError(Throwable) may expose internal representation by storing an externally mutable object into SelenideLog.error  At SelenideLog.java:[line 71]
M V EI: com.codeborne.selenide.logevents.SelenideLog.getError() may expose internal representation by returning SelenideLog.error  At SelenideLog.java:[line 67]
M V EI: com.codeborne.selenide.DefaultClipboard.driver() may expose internal representation by returning DefaultClipboard.driver  At DefaultClipboard.java:[line 24]
M V EI2: new com.codeborne.selenide.DefaultClipboard(Driver) may expose internal representation by storing an externally mutable object into DefaultClipboard.driver  At DefaultClipboard.java:[line 17]
M V EI2: new com.codeborne.selenide.files.DownloadedFile(File, Map) may expose internal representation by storing an externally mutable object into DownloadedFile.headers  At DownloadedFile.java:[line 23]
M V EI: com.codeborne.selenide.ElementsContainer.getSelf() may expose internal representation by returning ElementsContainer.self  At ElementsContainer.java:[line 14]
M B CT: Exception thrown in class com.codeborne.selenide.impl.Alias at new com.codeborne.selenide.impl.Alias(String) will leave the constructor. The object under construction remains partially initialized and may be vulnerable to Finalizer attacks.  At Alias.java:[line 14]
M V MS: Public static com.codeborne.selenide.commands.Commands.getInstance() may expose internal representation by returning Commands.instance  At Commands.java:[line 25]
M B CT: Exception thrown in class com.codeborne.selenide.conditions.PartialValue at new com.codeborne.selenide.conditions.PartialValue(String) will leave the constructor. The object under construction remains partially initialized and may be vulnerable to Finalizer attacks.  At PartialValue.java:[line 24]
M V EI2: new com.codeborne.selenide.impl.CollectionSnapshot(CollectionSource) may expose internal representation by storing an externally mutable object into CollectionSnapshot.originalCollection  At CollectionSnapshot.java:[line 22]
M V EI: com.codeborne.selenide.impl.CollectionSnapshot.getElements() may expose internal representation by returning CollectionSnapshot.elementsSnapshot  At CollectionSnapshot.java:[line 30]
M V EI: com.codeborne.selenide.impl.CollectionSnapshot.getAlias() may expose internal representation by returning CollectionSnapshot.alias  At CollectionSnapshot.java:[line 62]
M V EI: com.codeborne.selenide.impl.LazyCollectionSnapshot.getElements() may expose internal representation by returning LazyCollectionSnapshot.elementsSnapshot  At LazyCollectionSnapshot.java:[line 28]
M B CT: Exception thrown in class com.codeborne.selenide.files.ExtensionFilter at new com.codeborne.selenide.files.ExtensionFilter(String) will leave the constructor. The object under construction remains partially initialized and may be vulnerable to Finalizer attacks.  At ExtensionFilter.java:[line 12]
M V EI: com.codeborne.selenide.impl.WebDriverInstance.proxy() may expose internal representation by returning WebDriverInstance.proxy  At WebDriverInstance.java:[line 49]
M V EI: com.codeborne.selenide.impl.WebDriverInstance.downloadsFolder() may expose internal representation by returning WebDriverInstance.downloadsFolder  At WebDriverInstance.java:[line 21]
M V EI2: new com.codeborne.selenide.impl.WebDriverInstance(Config, WebDriver, SelenideProxyServer, DownloadsFolder) may expose internal representation by storing an externally mutable object into WebDriverInstance.proxy  At WebDriverInstance.java:[line 31]
M V EI2: new com.codeborne.selenide.impl.WebDriverInstance(Config, WebDriver, SelenideProxyServer, DownloadsFolder) may expose internal representation by storing an externally mutable object into WebDriverInstance.downloadsFolder  At WebDriverInstance.java:[line 31]
M V EI: com.codeborne.selenide.impl.WebElementsCollectionWrapper.getElements() may expose internal representation by returning WebElementsCollectionWrapper.elements  At WebElementsCollectionWrapper.java:[line 30]
M V EI: com.codeborne.selenide.impl.WebElementsCollectionWrapper.getAlias() may expose internal representation by returning WebElementsCollectionWrapper.alias  At WebElementsCollectionWrapper.java:[line 69]
M V EI2: new com.codeborne.selenide.impl.WebElementsCollectionWrapper(Driver, Collection) may expose internal representation by storing an externally mutable object into WebElementsCollectionWrapper.driver  At WebElementsCollectionWrapper.java:[line 22]
M V EI: com.codeborne.selenide.impl.WebElementsCollectionWrapper.driver() may expose internal representation by returning WebElementsCollectionWrapper.driver  At WebElementsCollectionWrapper.java:[line 63]
M V EI2: new com.codeborne.selenide.impl.HeadOfCollection(CollectionSource, int) may expose internal representation by storing an externally mutable object into HeadOfCollection.originalCollection  At HeadOfCollection.java:[line 20]
M V EI: com.codeborne.selenide.impl.HeadOfCollection.getAlias() may expose internal representation by returning HeadOfCollection.alias  At HeadOfCollection.java:[line 64]
M V EI: com.codeborne.selenide.SelenideConfig.browserCapabilities() may expose internal representation by returning SelenideConfig.browserCapabilities  At SelenideConfig.java:[line 341]
M V EI2: com.codeborne.selenide.SelenideConfig.browserCapabilities(MutableCapabilities) may expose internal representation by storing an externally mutable object into SelenideConfig.browserCapabilities  At SelenideConfig.java:[line 345]
M V EI: com.codeborne.selenide.impl.TailOfCollection.getAlias() may expose internal representation by returning TailOfCollection.alias  At TailOfCollection.java:[line 69]
M V EI2: new com.codeborne.selenide.impl.TailOfCollection(CollectionSource, int) may expose internal representation by storing an externally mutable object into TailOfCollection.originalCollection  At TailOfCollection.java:[line 20]
M V EI: com.codeborne.selenide.impl.Downloads.files() may expose internal representation by returning Downloads.files  At Downloads.java:[line 40]
M V EI2: new com.codeborne.selenide.conditions.Or(String, List) may expose internal representation by storing an externally mutable object into Or.conditions  At Or.java:[line 32]
M V EI2: new com.codeborne.selenide.conditions.And(String, List) may expose internal representation by storing an externally mutable object into And.conditions  At And.java:[line 30]
M V EI: com.codeborne.selenide.proxy.FileDownloadFilter.downloads() may expose internal representation by returning FileDownloadFilter.downloads  At FileDownloadFilter.java:[line 125]
M B CT: Exception thrown in class com.codeborne.selenide.conditions.MatchText at new com.codeborne.selenide.conditions.MatchText(String) will leave the constructor. The object under construction remains partially initialized and may be vulnerable to Finalizer attacks.  At MatchText.java:[line 17]
M B Nm: Class com.codeborne.selenide.ex.AlertNotFoundException is not derived from an Exception, even though it is named as such  At AlertNotFoundException.java:[lines 10-11]
M B Nm: Class com.codeborne.selenide.ex.FrameNotFoundException is not derived from an Exception, even though it is named as such  At FrameNotFoundException.java:[lines 10-11]
M B Nm: Class com.codeborne.selenide.ex.WindowNotFoundException is not derived from an Exception, even though it is named as such  At WindowNotFoundException.java:[lines 10-11]
M V EI2: new com.codeborne.selenide.SelenideTargetLocator(Driver) may expose internal representation by storing an externally mutable object into SelenideTargetLocator.driver  At SelenideTargetLocator.java:[line 39]
M B CT: Exception thrown in class com.codeborne.selenide.conditions.OwnText at new com.codeborne.selenide.conditions.OwnText(String) will leave the constructor. The object under construction remains partially initialized and may be vulnerable to Finalizer attacks.  At OwnText.java:[line 18]
M B CT: Exception thrown in class com.codeborne.selenide.conditions.PartialTextCaseSensitive at new com.codeborne.selenide.conditions.PartialTextCaseSensitive(String) will leave the constructor. The object under construction remains partially initialized and may be vulnerable to Finalizer attacks.  At PartialTextCaseSensitive.java:[line 20]
M B CT: Exception thrown in class com.codeborne.selenide.conditions.Text at new com.codeborne.selenide.conditions.Text(String, GetSelectedOptionText) will leave the constructor. The object under construction remains partially initialized and may be vulnerable to Finalizer attacks.  At Text.java:[line 26]
M B CT: Exception thrown in class com.codeborne.selenide.conditions.PartialText at new com.codeborne.selenide.conditions.PartialText(String) will leave the constructor. The object under construction remains partially initialized and may be vulnerable to Finalizer attacks.  At PartialText.java:[line 20]
M V EI: com.codeborne.selenide.impl.WebElementSource.getAlias() may expose internal representation by returning WebElementSource.alias  At WebElementSource.java:[line 57]
M V MS: Public static com.codeborne.selenide.impl.ScreenShotLaboratory.getInstance() may expose internal representation by returning ScreenShotLaboratory.instance  At ScreenShotLaboratory.java:[line 58]
M B Nm: Class com.codeborne.selenide.ex.ElementIsNotClickableException is not derived from an Exception, even though it is named as such  At ElementIsNotClickableException.java:[lines 10-11]
M B Nm: Class com.codeborne.selenide.ex.InvalidStateException is not derived from an Exception, even though it is named as such  At InvalidStateException.java:[lines 11-17]
M B CT: Exception thrown in class com.codeborne.selenide.collections.ExactTexts at new com.codeborne.selenide.collections.ExactTexts(List) will leave the constructor. The object under construction remains partially initialized and may be vulnerable to Finalizer attacks.  At ExactTexts.java:[line 37]
M V EI2: new com.codeborne.selenide.impl.SelenideElementIterator(CollectionSource) may expose internal representation by storing an externally mutable object into SelenideElementIterator.collection  At SelenideElementIterator.java:[line 17]
M B CT: Exception thrown in class com.codeborne.selenide.collections.Attributes at new com.codeborne.selenide.collections.Attributes(String, List) will leave the constructor. The object under construction remains partially initialized and may be vulnerable to Finalizer attacks.  At Attributes.java:[line 33]
M V EI: com.codeborne.selenide.impl.FilteringCollection.getAlias() may expose internal representation by returning FilteringCollection.alias  At FilteringCollection.java:[line 69]
M V EI2: new com.codeborne.selenide.impl.FilteringCollection(CollectionSource, Condition) may expose internal representation by storing an externally mutable object into FilteringCollection.originalCollection  At FilteringCollection.java:[line 23]
M V EI2: new com.codeborne.selenide.impl.ElementFinder(Driver, WebElementSource, By, int, String) may expose internal representation by storing an externally mutable object into ElementFinder.driver  At ElementFinder.java:[line 91]
M V EI2: new com.codeborne.selenide.impl.ElementFinder(Driver, WebElementSource, By, int, String) may expose internal representation by storing an externally mutable object into ElementFinder.parent  At ElementFinder.java:[line 92]
M V EI: com.codeborne.selenide.impl.ElementFinder.driver() may expose internal representation by returning ElementFinder.driver  At ElementFinder.java:[line 115]
M V EI: com.codeborne.selenide.impl.BySelectorCollection.driver() may expose internal representation by returning BySelectorCollection.driver  At BySelectorCollection.java:[line 68]
M V EI2: new com.codeborne.selenide.impl.BySelectorCollection(Driver, WebElementSource, By) may expose internal representation by storing an externally mutable object into BySelectorCollection.parent  At BySelectorCollection.java:[line 32]
M V EI2: new com.codeborne.selenide.impl.BySelectorCollection(Driver, WebElementSource, By) may expose internal representation by storing an externally mutable object into BySelectorCollection.driver  At BySelectorCollection.java:[line 31]
M V EI: com.codeborne.selenide.impl.BySelectorCollection.getAlias() may expose internal representation by returning BySelectorCollection.alias  At BySelectorCollection.java:[line 74]
M B CT: Exception thrown in class com.codeborne.selenide.collections.ContainExactTextsCaseSensitive at new com.codeborne.selenide.collections.ContainExactTextsCaseSensitive(List) will leave the constructor. The object under construction remains partially initialized and may be vulnerable to Finalizer attacks.  At ContainExactTextsCaseSensitive.java:[line 35]
M B Nm: Class com.codeborne.selenide.ex.ConditionNotMetException is not derived from an Exception, even though it is named as such  At ConditionNotMetException.java:[lines 11-17]
M V EI: com.codeborne.selenide.impl.WebElementWrapper.driver() may expose internal representation by returning WebElementWrapper.driver  At WebElementWrapper.java:[line 75]
M V EI: com.codeborne.selenide.impl.WebElementWrapper.getWebElement() may expose internal representation by returning WebElementWrapper.delegate  At WebElementWrapper.java:[line 54]
M B Nm: Class com.codeborne.selenide.ex.ConditionMetException is not derived from an Exception, even though it is named as such  At ConditionMetException.java:[lines 11-17]
M V EI2: new com.codeborne.selenide.ElementsCollection(CollectionSource) may expose internal representation by storing an externally mutable object into ElementsCollection.collection  At ElementsCollection.java:[line 57]
M V EI: com.codeborne.selenide.proxy.SelenideProxyServer.getProxy() may expose internal representation by returning SelenideProxyServer.proxy  At SelenideProxyServer.java:[line 195]
M V EI2: new com.codeborne.selenide.Modal(Driver) may expose internal representation by storing an externally mutable object into Modal.driver  At Modal.java:[line 20]
M B CT: Exception thrown in class com.codeborne.selenide.conditions.datetime.DateBetween at new com.codeborne.selenide.conditions.datetime.DateBetween(LocalDate, LocalDate, DateFormatCondition) will leave the constructor. The object under construction remains partially initialized and may be vulnerable to Finalizer attacks.  At DateBetween.java:[line 20]
M V EI2: new com.codeborne.selenide.impl.ElementsContainerCollection(PageObjectFactory, Driver, Field, Class, Type[], CollectionSource) may expose internal representation by storing an externally mutable object into ElementsContainerCollection.collection  At ElementsContainerCollection.java:[line 39]
M V EI2: new com.codeborne.selenide.impl.ElementsContainerCollection(PageObjectFactory, Driver, Field, Class, Type[], CollectionSource) may expose internal representation by storing an externally mutable object into ElementsContainerCollection.field  At ElementsContainerCollection.java:[line 36]
M V EI2: new com.codeborne.selenide.impl.ElementsContainerCollection(PageObjectFactory, Driver, Field, Class, Type[], CollectionSource) may expose internal representation by storing an externally mutable object into ElementsContainerCollection.driver  At ElementsContainerCollection.java:[line 35]
M V EI2: new com.codeborne.selenide.impl.ElementsContainerCollection(PageObjectFactory, Driver, Field, Class, Type[], CollectionSource) may expose internal representation by storing an externally mutable object into ElementsContainerCollection.genericTypes  At ElementsContainerCollection.java:[line 38]
M V EI2: new com.codeborne.selenide.DragAndDropOptions$DragAndDropTarget$Element(WebElement) may expose internal representation by storing an externally mutable object into DragAndDropOptions$DragAndDropTarget$Element.element  At DragAndDropOptions.java:[line 121]
M V EI: com.codeborne.selenide.impl.LazyWebElementSnapshot.getWebElement() may expose internal representation by returning LazyWebElementSnapshot.snapshot  At LazyWebElementSnapshot.java:[line 49]
M V EI: com.codeborne.selenide.impl.JSElementFinder.driver() may expose internal representation by returning JSElementFinder.driver  At JSElementFinder.java:[line 47]
M V EI2: new com.codeborne.selenide.impl.Describe(Driver, WebElement) may expose internal representation by storing an externally mutable object into Describe.element  At Describe.java:[line 33]
M V EI2: new com.codeborne.selenide.impl.Describe(Driver, WebElement) may expose internal representation by storing an externally mutable object into Describe.driver  At Describe.java:[line 32]
M B CT: Exception thrown in class com.codeborne.selenide.conditions.datetime.DateTimeBetween at new com.codeborne.selenide.conditions.datetime.DateTimeBetween(LocalDateTime, LocalDateTime, DateTimeFormatCondition) will leave the constructor. The object under construction remains partially initialized and may be vulnerable to Finalizer attacks.  At DateTimeBetween.java:[line 20]
M B CT: Exception thrown in class com.codeborne.selenide.selector.ByShadow$ByShadowCss at new com.codeborne.selenide.selector.ByShadow$ByShadowCss(String, String, String[]) will leave the constructor. The object under construction remains partially initialized and may be vulnerable to Finalizer attacks.  At ByShadow.java:[line 50]
M V EI: com.codeborne.selenide.SelenideDriver.driver() may expose internal representation by returning SelenideDriver.driver  At SelenideDriver.java:[line 93]
M V EI2: new com.codeborne.selenide.SelenideDriver(Config, Driver) may expose internal representation by storing an externally mutable object into SelenideDriver.driver  At SelenideDriver.java:[line 71]
M B Nm: The method name com.codeborne.selenide.SelenideDriver.Wait() doesn't start with a lower case letter  At SelenideDriver.java:[line 279]
M P SS: Unread field: com.codeborne.selenide.proxy.ResponseSizeWatchdog.threshold; should this field be static?  At ResponseSizeWatchdog.java:[line 16]
H V MS: com.codeborne.selenide.webdriver.HttpClientTimeouts.defaultLocalReadTimeout isn't final but should be  At HttpClientTimeouts.java:[line 16]
H V MS: com.codeborne.selenide.webdriver.HttpClientTimeouts.defaultLocalConnectTimeout isn't final but should be  At HttpClientTimeouts.java:[line 17]
H V MS: com.codeborne.selenide.impl.Html.text isn't final but should be  At Html.java:[line 12]
H V MS: com.codeborne.selenide.impl.Cleanup.of isn't final but should be  At Cleanup.java:[line 20]
SpotBugs ended with exit code 1
